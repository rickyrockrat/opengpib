# \file ******************************************************************
#\n\b File:        makepng
#\n\b Author:      Doug Springer
#\n\b Company:     DNK Designs Inc.
#\n\b Date:        08/05/2008 11:18 pm
#\n\b Description: Generate a PNG image from scope data.
#*/ /************************************************************************
#Change Log: \n
# This file is part of OpenGPIB.
#
#    OpenGPIB is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License version 3 
#    as published by the Free Software Foundation. Note that permission 
#    is not granted to redistribute this program under the terms of any
#    other version of the General Public License.
#
#    OpenGPIB is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with OpenGPIB.  If not, see <http://www.gnu.org/licenses/>.
#    
#		The License should be in the file called COPYING.
#

usage () {

	echo "Usage for \$Revision: 1.8 $:"
	echo "makepng -b basename <options>"
	echo " -b bn bn is the base filename. Input files should be bn.ch1 bn.ch2, etc"
	echo " -c process cursors file basename.cursors"
	echo " -f funcname Do function 'funcname' and place in basename.funcname"
	echo " "
	exit 1
}
add_ifexist () {
if [ -e "$BN$1" ]; then
	INPUT="$INPUT -i $BN$1"
	if [ "1" = "$FAKE_FUNCS" ]; then
		IN="$IN -i $BN$1"
	fi
fi
}
if [ $# -lt 1 ]; then
	usage
fi
CURSORS=""
FUNC=""
BN=""
IN=""
DESC=""
while  getopts b:cd:f:i: opt ; do
  #echo "opt=$opt arg=$OPTARG"
  case $opt in
  	b) BN="$OPTARG" ;;
    c) CURSORS="1" ;;
    d) DESC="-a \"$OPTARG\"" ;;																								 
    f) FUNC="-f $OPTARG $FUNC" ;;
    i) IN="$IN -i $OPTARG" ;; 
    *) echo "Invalid option $OPTARG"
    	usage
       exit 1
       ;;
  esac
done
FAKE_FUNCS=0
if [ -z "$IN" ]; then
	if [ -n "$FUNC" ];then
		FAKE_FUNCS=1
	fi
fi
OUTF="$BN"
if [ "" != "$BN" ]; then
	BN="$BN."
fi
if [ ! -e "$BN"ch1 ]; then
	echo "Unable to find $BN.ch1"
	exit 1
fi
if [ "" != "$CURSORS" ]; then
	CURSORS="-d $BN""cursors"
fi

if [ -e $OUTF ] ; then
	OUTF="$OUTF.__"
fi
DIR=$(dirname $0)
add_ifexist ch1
add_ifexist ch2
echo "$DIR/tek2gplot \"$DESC\" -m -o $OUTF $INPUT $CURSORS $FUNC $IN -t png  "
$DIR/tek2gplot "$DESC" -m -o $OUTF $INPUT $CURSORS $FUNC $IN -t png  
gnuplot $OUTF.plot > $OUTF.png
