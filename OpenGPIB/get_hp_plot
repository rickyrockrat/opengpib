#!/bin/bash
# \file ******************************************************************
#\n\b File:        get_hp_plot
#\n\b Author:      Doug Springer
#\n\b Company:     DNK Designs Inc.
#\n\b Date:        02/25/2012 
#\n\b Description: Optain waveform(s), then plot using plot-file.
#   Quick n dirty script to save some typing 
#*/ /************************************************************************
# This file is part of OpenGPIB.
#
#    OpenGPIB is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License version 3 
#    as published by the Free Software Foundation. Note that permission 
#    is not granted to redistribute this program under the terms of any
#    other version of the General Public License.
#
#    OpenGPIB is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with OpenGPIB.  If not, see <http://www.gnu.org/licenses/>.
#    
#		The License should be in the file called COPYING.
#

# base card
get_waveform () {
./get_hp_1653xx_scope -a 192.168.0.200 -t $2 -c ch1 -c ch2 -c ch3 -c ch4 -g -o "$1"
}
# base type card(s) title opts
plot_waveform () {
	let x=0
for c in $3; do
  let i=1
  while [ $i -lt 5 ]; do
    files[$x]="$base-$c.ch$i"
    let i=i+1
    let x=x+1
  done
done	
	echo "files=${files[@]}"
./plot-file -f 2 -k "$2" -o "$1.png" -p "$1.plot" -t "$4" $5 "${files[@]}"
}

usage() {
	echo "usage: get_hp_plot <options>"
	echo "where options are:"
	echo " -b bname set base name to bname (-card gets appended)"
	echo "    ex: -b myfile -t 13 -> myfile-13"
	echo " -k pkind set plot kind to pkind (png or x11)"
	echo " -h this screen"
	echo " -m mode set mode to plot,get,or all (required)"
	echo " -n ptitle set title of plot to ptitle"
	echo " -t tp set card type to tp, where tp is a number 13/14 (14)"
	echo "    use -t more than once to grab mulitple plots"
	echo " -p popts send popts to plot-file"
  echo "ex: ./get_plot -k png -b myfile -p \"-t \"This is My File\"\""
}
if [ $# -lt 1 ]; then
   usage
   exit 1
fi
MODE=""
CARD=""
title=" "
while  getopts b:k:hm:n:p:t: opt ; do
  case $opt in	
    b) base="$OPTARG";;
    k) type="$OPTARG";;
    h) usage;;
    m) MODE="$OPTARG"
       #p) MODE="plot";;
       #g) MODE="get";;
       #a) MODE="all";;
       #*) echo "Unknown mode $OPTARG."
       #usage;;
       #esac
       ;;
     p) popts="$OPTARG" ;;
     n) title="$OPTARG";;
     t) CARD="$CARD $OPTARG";;
     *)echo "Unknown mode $OPTARG."
       usage;;
   esac 
done   
if [ -z "$CARD" ]; then
  CARD=14
fi
if [ -z "$base" ] || [ -z "$type" ] || [ -z "$MODE" ]; then
  echo "have to specify at least -b & -k"
  usage
fi

if [ "$MODE" = "all" ] || [ "$MODE" = "get" ]; then
for c in $CARD; do
  get_waveform "$base-$c" "$c"
done
fi
if [ "$MODE" = "all" ] || [ "$MODE" = "plot" ]; then
plot_waveform "$base" "$type" "$CARD" "$title" "$popts"
fi
